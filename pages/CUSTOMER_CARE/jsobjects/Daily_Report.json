{
  "unpublishedCollection": {
    "name": "Daily_Report",
    "pageId": "CUSTOMER_CARE",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tmyVar1: [],\n\tmyVar2: {}, \n\tCallback_data: () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (Logs_data.data.length-1); i>=0;i--){\n\t\t\tif(Logs_data.data[i].REMARKS == \"CALL BACK\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tRNR_data: () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (Logs_data.data.length-1); i>=0;i--){\n\t\t\tif(Logs_data.data[i].REMARKS == \"RNR\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tINTERESTED_data : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (Logs_data.data.length-1); i>=0;i--){\n\t\t\tif(Logs_data.data[i].REMARKS == \"INTERESTED\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tNOTINTERESTED_data : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (Logs_data.data.length-1); i>=0;i--){\n\t\t\tif(Logs_data.data[i].REMARKS == \"NOT INTERESTED\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tDemo_data : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (Logs_data.data.length-1); i>=0;i--){\n\t\t\tif(Logs_data.data[i].REMARKS == \"DEMO REQUEST\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\t\tInstall_data : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (Logs_data.data.length-1); i>=0;i--){\n\t\t\tif(Logs_data.data[i].REMARKS == \"INSTALL REQUEST\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tSR_data : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (Logs_data.data.length-1); i>=0;i--){\n\t\t\tif(Logs_data.data[i].REMARKS == \"SWITCH OFF/NOT REACHBLE\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tCDisc_data : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (Logs_data.data.length-1); i>=0;i--){\n\t\t\tif(Logs_data.data[i].REMARKS == \"CUSTOMER DISCONNECTING\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\t\tWNum_data : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (Logs_data.data.length-1); i>=0;i--){\n\t\t\tif(Logs_data.data[i].REMARKS == \"WRONG NUM\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\t\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t}\n}",
    "variables": [
      {
        "name": "myVar1",
        "value": "[]"
      },
      {
        "name": "myVar2",
        "value": "{}"
      }
    ],
    "userPermissions": []
  },
  "id": "CUSTOMER_CARE_Daily_Report",
  "deleted": false,
  "gitSyncId": "6315ceae9b89144767c6aa28_63201e0caa707106b23a5a4a"
}