{
  "unpublishedCollection": {
    "name": "Search",
    "pageId": "CUSTOMER_CARE",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tIS_Active :()=>{\n\t\tlet data = [];\n\t\tfor(let i= (GET_CALLERSDATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_CALLERSDATA.data[i].REMARK == \"INTERESTED\" || GET_CALLERSDATA.data[i].REMARK == \"SWITCH OFF/NOT REACHBLE\" && GET_CALLERSDATA.data[i].ACTIVE == false){\n\t\t\t\tACTIVATION.run()\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t},\n\tactivation :()=>{\n\t\tfor(let i= (GET_CALLERSDATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_CALLERSDATA.data[i].REMARK == \"INTERESTED\" || GET_CALLERSDATA.data[i].REMARK == \"SWITCH OFF/NOT REACHBLE\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t},\n\tRNR_Active :()=>{\n\t\tif(log_remark.selectedOptionValue == \"CALL BACK\" || remark.selectedOptionValue == \"CALL BACK\"){\n\t\t\treturn true;\n\t\t}else if(log_remark.selectedOptionValue == \"RNR\" || remark.selectedOptionValue == \"RNR\"){\n\t\t\treturn true;\n\t\t}else {\n\t\t\treturn false;\n\t\t}\n\t},\n\tRNR_Schd:()=>{\n\t\tif(log_remark.selectedOptionValue == \"RNR\" || remark.selectedOptionValue == \"RNR\"){\n\t\t\treturn helper_js.time();\n\t\t}\n\t},\n\tSchd :()=>{\n\t\t\tlet data=[];\n\tfor (let i=0; i<SELECT_LEADS_CALLBACK.data.length; i++)\n\t{\t\n\t\tif(\t(SELECT_LEADS_CALLBACK.data[i].SCHEDULE_DATE)<=helper_js.get_today_with_minutes())\n\t\t{\n\t\t\tdata.push(SELECT_LEADS_CALLBACK.data[i]);\n\t\t}\n\t}\n\t\tdata.sort((a,b)=>{\n\t\t\treturn new Date(b.SCHEDULE_DATE).getTime()  - new Date(a.SCHEDULE_DATE).getTime();\n\t\t});\n\t\treturn data;\n\t},\n\tsearch :()=>{\n\t\tlet search = [];\n\t\tconst sea= GET_CALLERSDATA.data.find(NUMBER => NUMBER.PHONE_NUMBER == search_cust.text);\n\t\tsearch.push(sea)\n\t\tif (search[0] != null){\n\t\t\tshowModal(\"LEAD_DATA\");\n\t\t}\n\t\telse{\n\t\t\tshowAlert(\"Number Not Exist\")\n\t\t}\n\t\t return search;\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t}\n}",
    "variables": [
      {
        "name": "myVar1",
        "value": "[]"
      },
      {
        "name": "myVar2",
        "value": "{}"
      }
    ],
    "userPermissions": []
  },
  "id": "CUSTOMER_CARE_Search",
  "deleted": false,
  "gitSyncId": "63493429528b216c77fefa59_6349487b0c4af9738a7ae243"
}